


entity memoria_ram is
	PORT(
		clk : IN STD_LOGIC; 
		endereco : IN STD_LOGIC; -- endereco de escrita/leitura
		dado_in : IN STD_LOGIC_VECTOR(4 downto 0); -- variavel para guardar dado escrito na memoria
		dado_out : OUT STD_LOGIC(4 downto 0); -- variavel para guardar dado lido da memoria
		write_enable : IN STD_LOGIC;	-- '1' para o modo de escrita e '0' para leitura
	);
end memoria_ram;


architecture arch_ram of memoria_ram is

type tamanho_memoria is array(31 downto 0) of std_logic_vector(4 downto 0);

signal memoria : tamanho_memoria := ();
signal endereco_reg : std_logic_vector(4 downto 0); -- signal interno com ultimo endereco de memoria

begin

process(clk)
begin
	if (rising_edge(clk)) then
		if (write_enable = '1') then
			memoria(to_integer(unsigned(endereco))) <= dado_in;
		end if;

		endereco_reg <= endereco;
	end if;
	
end process;


-- Guarda valor da posicao atual de memoria na variavel de saida
dado_out <= memoria(to_integer(unsigned(endereco_reg))); 

end arch_ram;